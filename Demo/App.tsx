// App.tsx - S·ª≠a l·ªói Google Sign-In c·∫•u h√¨nh
import React, { useEffect, useState } from 'react';
import { NavigationContainer } from '@react-navigation/native';
import AuthNavigator from './src/navigation/AuthNavigator';
import HomeScreen from './src/screens/HomeScreen';
import LoadingScreen from './src/screens/LoadingSceen';
import { AuthProvider, useAuth } from './src/contexts/AuthContext';
import { GoogleSignin } from '@react-native-google-signin/google-signin';
import { Alert, Platform, View, Text, ActivityIndicator } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import firestore from '@react-native-firebase/firestore';
import AppNavigator from './src/navigation/AppNavigator';
import { StudentProvider } from './src/contexts/StudentContext';
import { Provider as PaperProvider } from 'react-native-paper';

// C·∫•u h√¨nh Google Sign-in - PHI√äN B·∫¢N S·ª¨A L·ªñI
const configureGoogleSignIn = async () => {
  try {
    console.log('üîß B·∫Øt ƒë·∫ßu c·∫•u h√¨nh Google Sign-In...');
    
    // C·∫•u h√¨nh c∆° b·∫£n - G·ª† B·ªé C√ÅC OPTION G√ÇY L·ªñI
    GoogleSignin.configure({
      webClientId: '462857112524-diaumjhsupjftohan52nhjfhcq9it4jr.apps.googleusercontent.com',
      offlineAccess: false, // T·∫Øt offline access ƒë·ªÉ tr√°nh l·ªói
    });
    
    console.log('‚úÖ Google Sign-In c·∫•u h√¨nh c∆° b·∫£n th√†nh c√¥ng');
    
    // KH√îNG ki·ªÉm tra Google Play Services trong qu√° tr√¨nh c·∫•u h√¨nh
    // S·∫Ω ki·ªÉm tra khi user th·ª±c s·ª± ƒëƒÉng nh·∫≠p
    console.log('‚úÖ Google Sign-In s·∫µn s√†ng s·ª≠ d·ª•ng');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå L·ªói c·∫•u h√¨nh Google Sign-In:', error);
    
    // Ch·ªâ log l·ªói, kh√¥ng crash app
    if (__DEV__) {
      console.log('üîç Debug info:');
      console.log('- Platform:', Platform.OS);
      console.log('- Error details:', error);
    }
    
    // Return false nh∆∞ng kh√¥ng crash app
    return false;
  }
};

// RootNavigator - T·ªëi ∆∞u h√≥a loading v√† navigation
function RootNavigator() {
  const { user, initialized, registering, showLoading, loginInProgress } = useAuth();

  if (!initialized || registering || (showLoading && !loginInProgress)) {
    return <LoadingScreen />;
  }

  // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p th√¨ render AuthNavigator
  if (!user) {
    return <AuthNavigator />;
  }

  // N·∫øu ƒë√£ ƒëƒÉng nh·∫≠p th√¨ render AppNavigator
  return <AppNavigator />;
}

export default function App() {
  const [googleConfigured, setGoogleConfigured] = useState(false);

  useEffect(() => {
    const initGoogleSignIn = async () => {
      try {
        const success = await configureGoogleSignIn();
        setGoogleConfigured(success);
        if (!success && __DEV__) {
          console.log('‚ö†Ô∏è Google Sign-In kh√¥ng ƒë∆∞·ª£c c·∫•u h√¨nh, nh∆∞ng app v·∫´n ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng');
        }
      } catch (error) {
        console.error('‚ùå Kh√¥ng th·ªÉ kh·ªüi t·∫°o Google Sign-In:', error);
        setGoogleConfigured(false);
      }
    };
    initGoogleSignIn();
  }, []);

  return (
    <PaperProvider>
      <AuthProvider>
        <StudentProvider>
          <NavigationContainer>
            <RootNavigator />
          </NavigationContainer>
        </StudentProvider>
      </AuthProvider>
    </PaperProvider>
  );
}